
class Solution {
    public int calculate(String s) {
        
        int result = 0;
        int n = 0;
        int sign = 1;
        Stack<Integer> stack = new Stack<>();

        for(int i=0;i<s.length();i++){
            char c = s.charAt(i);
            
            if(Character.isDigit(c)){
                //while(i<s.length() && Character.isDigit(s.charAt(i))){
                    n = n * 10 +(s.charAt(i) - '0');
                   // i++;
                //}
               
                
            }
            else if(c == '+'){
                result += sign * n;
                n = 0;
                sign = 1;
            }
            else if(c == '-'){
                result += sign * n;
                n = 0;
                sign = -1;
            }
            else if(c == '('){
                stack.push(result);
                stack.push(sign);
                result = 0;
                sign = 1;
            }
            else if(c == ')'){
                result += sign * n;
                n = 0;
                result *= stack.pop();
                result += stack.pop();
                
            }
            
        }
        if(n != 0){
            result += sign * n;
        }
        return result;
    }
}

/*

Example 1:

        Input: s = "1 + 1"
        Output: 2

Example 2:

        Input: s = " 2-1 + 2 "
        Output: 3

Example 3:

        Input: s = "(1+(4+5+2)-3)+(6+8)"
        Output: 23

Example 4:
        Input: s = "1-(     -2)"
        Output: 3

Example 5:
        Input: s = "2147483647"
        Output: 2147483647
*/
