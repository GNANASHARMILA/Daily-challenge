class Solution {
    public int largestPalindrome(int n) {
        if(n == 1){
            return 9;
        }
        int max = (int) Math.pow(10, n) - 1;
        int min = (int) Math.pow(10, n - 1);

        for(int i=max;i>=min;i--){
            long palindrome = createPalindrome(i);
            for(long j=max; j * j >=palindrome;j--){
                if(palindrome % j == 0 && palindrome / j <= max){
                    return (int) (palindrome % 1337);
                }
            }

        }
        return -1;
    }
    private long createPalindrome(int num){
        String str = String.valueOf(num);
        String reversed = new StringBuilder(str).reverse().toString();
        return Long.parseLong(str + reversed);
    }

}

/*
Example 1:

        Input: n = 2
        Output: 987
        Explanation: 99 x 91 = 9009, 9009 % 1337 = 987

Example 2:

        Input: n = 1
        Output: 9

*/
