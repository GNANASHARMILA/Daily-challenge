class Solution {
    public int findLength(int[] nums1, int[] nums2) {
        int ans=0;
        int[][] max=new int[nums1.length+1][nums2.length+1];
        for(int i=nums1.length-1;i>=0;i--){
            for(int j=nums2.length-1;j>=0;j--){
                if(nums1[i]==nums2[j]){
                    max[i][j]=max[i+1][j+1]+1;
                    if(ans<max[i][j]){
                        ans=max[i][j];
                    }
                }
            }
        }
        return ans;
        
    }
}

/*
Example 1:

        Input: nums1 = [1,2,3,2,1], nums2 = [3,2,1,4,7]
        Output: 3
        Explanation: The repeated subarray with maximum length is [3,2,1].

Example 2:

        Input: nums1 = [0,0,0,0,0], nums2 = [0,0,0,0,0]
        Output: 5
        Explanation: The repeated subarray with maximum length is [0,0,0,0,0].
*/
