class Solution {
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> list = new ArrayList<>();
        generatePermute(list, new ArrayList<>(), nums);
        return list;
    }
        
    private void generatePermute(List<List<Integer>> list, List<Integer> result, int [] arr){
        if(result.size() == arr.length){
            list.add(new ArrayList<>(result));

        }
        else{
            for(int i=0;i<arr.length;i++){
                if(result.contains(arr[i])){
                    continue;
                }
                result.add(arr[i]);
                generatePermute(list,result,arr);
                result.remove(result.size()-1);
            }
        }
    }

    
}

/*
Example 1:

Input: nums = [1,2,3]
Output: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]

Example 2:

Input: nums = [0,1]
Output: [[0,1],[1,0]]

Example 3:

Input: nums = [1]
Output: [[1]]
*/
