class Solution {
    public boolean repeatedSubstringPattern(String s) {
        int len = s.length();
        for(int i=1;i<=len/2;i++){
            if(len % i == 0){
                String substring = s.substring(0,i);

                StringBuilder repeatedString = new StringBuilder();
                for(int j=1;j<=len/i;j++){
                    repeatedString.append(substring);
                }
                if(s.equals(repeatedString.toString())){
                    return true;
                }
            }
        }
        return false;
    }
}

/*
Example 1:

        Input: s = "abab"
        Output: true
        Explanation: It is the substring "ab" twice.

Example 2:

        Input: s = "aba"
        Output: false

Example 3:

        Input: s = "abcabcabcabc"
        Output: true
        Explanation: It is the substring "abc" four times or the substring "abcabc" twice.

Constraints:

        1 <= s.length <= 104
        s consists of lowercase English letters.

*/
